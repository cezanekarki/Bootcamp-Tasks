# -*- coding: utf-8 -*-
"""PythonProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ecoWbnuN4MgJ_EFG-lNIU1TRig00WWCK

**Project: Contact Book Application**

Objective: Create a Python program that allows users to manage their contacts. Users should be able to add, view, search for, and delete contacts.


Project Steps:


Initialize the Contact Book:

Create an empty list to represent the contact book. Each contact will be a dictionary with attributes like name, phone number, and email.

Create Functions:

Define functions for the following actions:

Add a contact.

View all contacts.

Search for a contact by name.

Delete a contact by name.

Main Menu:

Implement a loop that displays a menu of options for the user.

Options may include adding a contact, viewing contacts, searching for a contact, deleting a contact, or quitting the program.

User Input:

Depending on the user's choice from the menu, prompt them for the necessary input (e.g., name, phone number).

Perform Actions:

Based on the user's choice, call the corresponding function to perform the action.

Display the Updated Contact List:

After each action, display the updated contact list to the user.

Exit:

Allow the user to exit the program when they are done managing their contacts.

Hints:

Use a list to store the contact dictionaries.

Each contact can be represented as a dictionary with keys like "name," "phone," and "email."

Create functions for adding, viewing, searching, and deleting contacts.

Implement input validation to handle different user inputs.

Utilize a lambda function for searching contacts based on name.

Use *args and **kwargs in functions to handle variable numbers of arguments for contact attributes.
"""

contact_book = []

def add_contact(*args, **kwargs):
    if len(args) != 3:
        print("Invalid number of arguments. Please provide name, phone, and email.")
        return

    name, phone, email = args

    user_dict = {
        "name": name,
        "phone": phone,
        "email": email
    }

    contact_book.append(user_dict)
    print(f"You have added {name} successfully.")
    print(f"The updated contact book is: {contact_book}")

def search_contact():
    name = input("Which contact do you want to retrieve?")
    found = False

    search_lambda = lambda x: x["name"].lower() == name.lower()
    found_contacts = list(filter(search_lambda, contact_book))

    if found_contacts:
        for contact in found_contacts:
            print(f"For {contact['name']}, the phone number is {contact['phone']} and email is {contact['email']}")
        found = True
    else:
        print(f"Contact {name} not found in the contact book.")

def view_contact():
    if not contact_book:
        print("Contact book is empty.")
    else:
        for contact in contact_book:
            print(f"Contact: {contact}")

def delete_contact():
    global contact_book
    name = input("Which contact do you want to delete?")

    if contact_book:
        contact_book = [contact for contact in contact_book if contact["name"] != name]
        print(f"Contact {name} deleted successfully!")
    else:
        print(f"The {name} not available.")
    print(f"The updated contact book is: {contact_book}")

"""Main Menu:"""

def menu():
    while True:
        print("\n<<<<<< Welcome to the world of contact book >>>>>>")
        print("1. Add Contact")
        print("2. View Contact")
        print("3. Search Contact")
        print("4. Delete Contact")
        print("5. Quit")

        chosen = input("Choose any number from the above menu.... ")

        if chosen == "1":
            name = input("Enter the name of the contact:")
            phone = input("Enter the phone number of the contact:")
            email = input("Enter the email of the contact:")
            add_contact(name, phone, email)
        elif chosen == "2":
            view_contact()
        elif chosen == "3":
            search_contact()
        elif chosen == "4":
            delete_contact()
        elif chosen == "5":
            print("Thank you. See you again")
            break
        else:
            print("Please choose a number between 1 and 5.")

menu()
